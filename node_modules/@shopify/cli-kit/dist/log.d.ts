/// <reference types="node" />
import { Transform, TransformCallback, TransformOptions } from 'node:stream';
export declare class LinesTruncatorTransformer extends Transform {
    readonly maxFileSize: number;
    linesToRetain: string[];
    lastLineCompleted: boolean;
    constructor(maxFileSize: number, opts?: TransformOptions);
    _transform(chunk: unknown, encoding: BufferEncoding, callback: TransformCallback): void;
    _flush(callback: TransformCallback): void;
    calculateNumLinesToRetain(): number;
    completeLastLine(tokens: string[]): void;
}
export declare function initiateLogging(options?: {
    logDir?: string;
    override?: boolean;
}): Promise<void>;
export declare function closeLogging(): void;
export declare function logToFile(message: string, logLevel: string): void;
export declare function pageLogs({ lastCommand }: {
    lastCommand: boolean;
}): Promise<void>;
