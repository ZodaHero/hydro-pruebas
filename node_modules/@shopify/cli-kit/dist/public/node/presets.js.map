{"version":3,"file":"presets.js","sourceRoot":"","sources":["../../../src/public/node/presets.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,MAAM,IAAI,UAAU,EAAE,IAAI,IAAI,QAAQ,EAAC,MAAM,eAAe,CAAA;AACpE,OAAO,EAAC,MAAM,EAAE,IAAI,IAAI,QAAQ,EAAC,MAAM,eAAe,CAAA;AACtD,OAAO,EAAC,MAAM,IAAI,UAAU,EAAC,MAAM,eAAe,CAAA;AAElD,MAAM,gBAAgB,GAAG,sBAAsB,CAAA;AAK/C,MAAM,CAAC,KAAK,UAAU,wBAAwB,CAAC,GAAW,EAAE,IAAwB;IAClF,IAAI,eAAmC,CAAA;IACvC,IAAI,IAAI,EAAE,MAAM,EAAE;QAChB,eAAe,GAAG,MAAM,MAAM,CAAC,gBAAgB,EAAE;YAC/C,GAAG,EAAE,GAAG;YACR,IAAI,EAAE,MAAM;SACb,CAAC,CAAA;KACH;SAAM;QACL,MAAM,sBAAsB,GAAG,QAAQ,CAAC,GAAG,EAAE,gBAAgB,CAAC,CAAA;QAC9D,IAAI,MAAM,UAAU,CAAC,sBAAsB,CAAC,EAAE;YAC5C,eAAe,GAAG,sBAAsB,CAAA;SACzC;KACF;IACD,IAAI,eAAe,EAAE;QACnB,OAAO,UAAU,CAAC,MAAM,QAAQ,CAAC,eAAe,CAAC,CAAY,CAAA;KAC9D;SAAM;QACL,OAAO,EAAE,CAAA;KACV;AACH,CAAC","sourcesContent":["import {exists as fileExists, read as fileRead} from '../../file.js'\nimport {findUp, join as pathJoin} from '../../path.js'\nimport {decode as tomlDecode} from '../../toml.js'\n\nconst PRESETS_FILENAME = 'shopify.presets.toml'\n\nexport interface Presets {\n  [name: string]: object\n}\nexport async function loadPresetsFromDirectory(dir: string, opts?: {findUp: boolean}): Promise<Presets> {\n  let presetsFilePath: string | undefined\n  if (opts?.findUp) {\n    presetsFilePath = await findUp(PRESETS_FILENAME, {\n      cwd: dir,\n      type: 'file',\n    })\n  } else {\n    const allowedPresetsFilePath = pathJoin(dir, PRESETS_FILENAME)\n    if (await fileExists(allowedPresetsFilePath)) {\n      presetsFilePath = allowedPresetsFilePath\n    }\n  }\n  if (presetsFilePath) {\n    return tomlDecode(await fileRead(presetsFilePath)) as Presets\n  } else {\n    return {}\n  }\n}\n"]}