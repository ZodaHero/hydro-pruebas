import { renderConcurrent } from '@shopify/cli-kit/node/ui';
import { AbortController } from 'abort-controller';
const abortController = new AbortController();
let backendPromiseResolve;
const backendPromise = new Promise(function (resolve, _reject) {
    backendPromiseResolve = resolve;
});
const backendProcess = {
    prefix: 'backend',
    action: async (stdout, _stderr, _signal) => {
        stdout.write('first backend message');
        stdout.write('second backend message');
        stdout.write('third backend message');
        backendPromiseResolve();
    },
};
const frontendProcess = {
    prefix: 'frontend',
    action: async (stdout, _stderr, _signal) => {
        await backendPromise;
        stdout.write('first frontend message');
        stdout.write('second frontend message');
        stdout.write('third frontend message');
    },
};
// eslint-disable-next-line @typescript-eslint/no-floating-promises
renderConcurrent({ processes: [backendProcess, frontendProcess], abortController });
//# sourceMappingURL=render-concurrent.js.map