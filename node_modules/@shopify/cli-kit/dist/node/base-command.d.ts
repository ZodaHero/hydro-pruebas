import { Command, Interfaces } from '@oclif/core';
declare abstract class BaseCommand extends Command {
    static analyticsNameOverride(): string | undefined;
    catch(error: Error & {
        exitCode?: number | undefined;
    }): Promise<void>;
    protected init(): Promise<any>;
    protected parse<TFlags extends {
        path?: string;
        verbose?: boolean;
    }, TArgs extends {
        [name: string]: any;
    }>(options?: Interfaces.Input<TFlags> | undefined, argv?: string[] | undefined): Promise<Interfaces.ParserOutput<TFlags, TArgs>>;
}
export default BaseCommand;
export declare function addFromParsedFlags(flags: {
    path?: string;
    verbose?: boolean;
}): Promise<void>;
